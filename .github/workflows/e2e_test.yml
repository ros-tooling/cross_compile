name: End-to-end Testing (Nightly)
on:
  pull_request:
    # Running on pull requests to catch breaking changes as early as possible.
    # Waiting for this test to pass is recommended, but contributors can use their discretion whether they want to or not.
  schedule:
    # Run every morning Pacific Time. Random hour and minute to avoid creating excess traffic during popular times.
    # Because the test takes a long time (> 30 min) to run, it is configured to run only once a day.
    - cron:  '17 17 * * *'

jobs:
  build_and_test:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        target_arch: [aarch64, armhf, x86_64]
        target_os: [ubuntu, debian]
        rosdistro: [dashing, eloquent, foxy, melodic]
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2.1.1
      with:
        # NOTE: doing a python version matrix on top of the
        # already huge target matrix would take forever,
        # so here we just target the minimum supported version
        python-version: 3.5
    - name: Install dependencies
      run: |
        sudo apt update && sudo apt install -y qemu-user-static
    - name: Install cross-compile
      run: pip install -e .
    - run: mkdir -p /tmp/collected_metrics
    - name: Run end-to-end test
      env:
        METRICS_OUT_DIR: /tmp/collected_metrics
      run: |
        ./test/run_e2e_test.sh -a "${{ matrix.target_arch }}" -o "${{ matrix.target_os }}" -d "${{ matrix.rosdistro }}"
    - uses: actions/upload-artifact@v2
      with:
        path: /tmp/collected_metrics/

  log_workflow_status_to_cloudwatch:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
    - build_and_test
    if: always()  # run even if the dependent jobs have failed to log failures
    # Allow build reports to fail on pull requests.
    # When a contribution is made on a fork, the secrets will not be available,
    # and this step will be failing. This is acceptable.
    # On the other end, we want to be notified if this happens on merge, or
    # on schedule.
    continue-on-error: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        metric-name: 'BuildsE2E'
        metric-value: ${{needs.test_macOS.result == 'success' && needs.test_ubuntu.result == 'success' }}

  log_cross_compile_metrics_to_cloudwatch:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
    - build_and_test
    if: always()
    continue-on-error: ${{ github.event_name == 'pull_request' }}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        metric-data: /tmp/collected_metrics/*.json
